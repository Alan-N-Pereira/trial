{"version":3,"file":"static/js/190.f80ac744.chunk.js","mappings":"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,yCACA,sEACA,gCACA,yCACA,gCACA,4BACA,0CACA,4BACA,iDACA,2DACA,4BACA,yCACA,iEACA,uFACA,wEACA,UAGRC,KAAM,CACF,QAAS,mCACT,QAAS,iCAIc,CAC3BvB,GAAI,gBACJM,MAAO,CACH,QAAS,oBACT,QAAS,kBAEbc,YAAa,CACT,QAAS,gLACT,QAAS,6JAEbC,UAAW,CACP,QAAS,2LAET,QAAS,kLAGbC,SAAU,CACN,QAAS,CACL,wDACA,mDACA,wCACA,+DACA,yCACA,2BACA,mDACA,mDACA,2EACA,yCACA,8EACA,6FACA,6DACA,8EACA,2CACA,yCACA,2CACA,8BACA,2FACA,4EACA,2BACA,gGACA,2BACA,kGACA,2CACA,wCACA,QAEJ,QAAS,CACL,8CACA,8CACA,yCACA,2DACA,qCACA,4BACA,gDACA,2EACA,6FACA,yCACA,qCACA,yCACA,mCACA,kFACA,gEACA,4BACA,wFACA,4BACA,8DACA,gDACA,uFACA,wEACA,UAGRC,KAAM,CACF,QAAS,2DACT,QAAS,uDAIuB,CACpCvB,GAAI,mBACJM,MAAO,CACH,QAAS,yBACT,QAAS,uBAEbc,YAAa,CACT,QAAS,0WAIT,QAAS,kVAIbC,UAAW,CACP,QAAS,mFACT,QAAS,wFAEbC,SAAU,CACN,QAAS,CACL,wDACA,kDACA,wCACA,sFACA,2BACA,iEACA,+EACA,iCACA,2CACA,+EACA,iCACA,2BACA,gFACA,2CACA,wCACA,QAEJ,QAAS,CACL,8CACA,8CACA,yCACA,sEACA,4BACA,iEACA,oEACA,gCACA,yCACA,oEACA,mCACA,4BACA,sEACA,uFACA,wEACA,UAGRC,KAAM,CACF,QAAS,gCACT,QAAS,gCAIY,CACzBvB,GAAI,cACJM,MAAO,CACH,QAAS,kBACT,QAAS,gBAEbc,YAAa,CACT,QAAS,oTAET,QAAS,0RAGbC,UAAW,CACP,QAAS,+LAET,QAAS,kRAIbC,SAAU,CACN,QAAS,CACL,wDACA,kDACA,2BACA,+BACA,2BACA,8EACA,qCACA,2BACA,sCACA,2BACA,0CACA,+BACA,yCACA,yG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","sources":["pages/@components/header/index.tsx","pages/webapp/tutorial/problems.ts","pages/webapp/services/global-context.tsx","pages/webapp/editor/index.tsx","pages/webapp/services/ipc-service-emulator.tsx","services/chrome/voice-recognizer.js","services/chrome/use-voice-recognition.js","pages/webapp/speech2code/index.tsx","pages/webapp/tutorial/index.tsx","pages/webapp/index.tsx","pages/webapp/services/editor.ts","pages/webapp/services/spoken-interface.ts"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { parseRoute } from '../utils'\nimport './style.scss'\n\nexport default function Header(props: any) {\n    const { root, lang, route } = parseRoute()\n    const makeUrl = (path: string) => `${process.env.PUBLIC_URL}/${root}${ !root ? '' : '/' }${path}`\n    const isSelected = (page: string) => route === page ? 'selected' : '' \n    const stt = localStorage.getItem('STT') || 'azure'\n\n    const page = route === 'index' ? '' : route + '/'\n\n    const changeStt = (val: string, evt: React.MouseEvent) => {\n        evt.preventDefault()\n\n        localStorage.setItem('STT', val)\n\n        return window.location.reload()\n    }\n\n    return (\n        <nav id=\"top-nav\">\n            <figure>\n                <img\n                    src={`${process.env.PUBLIC_URL}/logo-purple.png`}\n                    alt=\"logo\"\n                    height=\"40\"\n                    title=\"Brand logo\"\n                />\n            </figure>\n            <a href={makeUrl('')} className={isSelected('index')}>\n                {i18n[lang]['Home']}\n            </a>\n            <a href={makeUrl('webapp/')} className={isSelected('webapp')}>\n                Demo\n            </a>\n            <a\n                rel=\"noreferrer\"\n                href={\n                    \"https://pedrooaugusto.github.io/Programming With Voice - Assistive Technology Tool \" +\n                    \"For Programming In JavaScript Using Voice - Pedro Silva.pdf\"\n                }\n                target=\"_blank\"\n            >\n                {i18n[lang]['Article']}\n            </a>\n            <a href={makeUrl('about/')} className={isSelected('about')}>\n                {i18n[lang]['About']}    \n            </a>\n            <a href={'https://github.com/pedrooaugusto/speech-to-code'} target=\"_blank\" rel=\"noreferrer\">\n                <i className='fa fa-github' style={{ marginRight: '5px', fontSize: '20px' }}/> GitHub\n            </a>\n            <div className=\"language\">\n                <a href={process.env.PUBLIC_URL + \"/en/\" + page} className={lang === 'en-US' ? `selected` : ''}>en-US</a>&nbsp;/&nbsp;\n                <a href={process.env.PUBLIC_URL + \"/pt/\" + page} className={lang === 'pt-BR' ? `selected` : ''}>pt-BR</a>\n                <span className=\"help\" data-tip=\"This website language\" data-for=\"header\">\n                    <i className=\"fa fa-question-circle\" />\n                </span>\n            </div>\n            <div className=\"config\">\n                <a\n                    href=\"#\"\n                    className={stt === 'azure' ? `selected` : ''}\n                    onClick={(evt) => changeStt('azure', evt)}\n                >\n                    Azure\n                </a>\n                &nbsp;/&nbsp;\n                <a\n                    href=\"#\"\n                    className={stt === 'chrome' ? `selected` : ''}\n                    onClick={(evt) => changeStt('chrome', evt)}\n                >\n                    Chrome\n                </a>\n                <span className=\"help\" data-tip={i18n[lang]['help']} data-for=\"header\">\n                    <i className=\"fa fa-question-circle\" />\n                </span>\n            </div>\n            <ReactTooltip multiline effect=\"solid\" className=\"custom-tooltip tooltip-header\" id=\"header\" />\n        </nav>\n    )\n}\n\nconst i18n: Record<string, any> = {\n    'en-US': {\n        'help': `Which Speech to Text provider should be used ?<br/>\n                Azure is the default option, but since it is a paid service it may not be available all the time.<br/>\n                Chrome is the native Speech to Text provider of your browser, it's a free service and was\n                tested on Google Chrome and MS Edge (it may work on any browser that supports the SpeechRecognition API).`,\n        'Home': 'Home',\n        'About': 'About',\n        'Article': 'Article'\n    },\n    'pt-BR': {\n        'help': `Qual o provedor de Speech to Text deve ser usado ?<br/>\n        Azure é a opção padrão, por se tratar de um serviço pago, pode não estar disponível a todo momento.<br/>\n        Chrome é o serviço nativo de conversão de fala em texto do seu navegador, é um serviço grátis e funciona\n            no Google Chrome e no MS Edge (pode funcionar em qualquer browser que suporte a SpeechRecognition API).`,\n        'Home': 'Início',\n        'About': 'Sobre',\n        'Article': 'Artigo'\n    }\n}\n","export interface Problem {\n    id: string;\n    index?: number;\n    title: {\n        'pt-BR': string;\n        'en-US': string;\n    };\n    placeholder: {\n        'pt-BR': string;\n        'en-US': string;\n    };\n    statement: {\n        'pt-BR': string;\n        'en-US': string;\n    };\n    solution: {\n        'pt-BR': string[];\n        'en-US': string[];\n    };\n    code: {\n        'pt-BR': string;\n        'en-US': string;\n    };\n}\n\nconst welcome: Problem = {\n    id: 'welcome',\n    title: {\n        'pt-BR': 'Olá Mundo',\n        'en-US': 'Hello World'\n    },\n    placeholder: {\n        'pt-BR': `Speech2Code é uma aplicação desktop que lhe permite programar usando apenas comandos de voz, \n        ela funciona manipulando IDE's e editores do código com base na análise de comandos de voz recebidos como entrada.<br/>\n        Nesta página, um demo da aplicação mencionada <u>portada para a web</u>, você pode aprender como usá-la resolvendo\n        programas de programação simples na linguagem JavaScript.<br/><br/>\n        O primeiro problema é o clássico \"Olá mundo\" onde você precisa escrever a string \"Olá mundo\"\n        na sáida padrão do sistema.`,\n\n        'en-US': `Speech2Code is a desktop application that enables you to code using just voice commands, \n        it achieves that by connecting to your favorite IDE and issuing commands to it. This page is a demo\n        of said application <u>ported to the web</u>, here you can learn how to use this tool by solving simple \n        programming problems using just voice commands. <b>You may change the input language to pt-BR.</b> <br/><br/>\n        The first problem is the classic \"hello world\" where you are meant to write \"hello world\" to\n        the standard output.`\n    },\n    statement: {\n        'pt-BR': 'Escreva a string \"olá mundo\" na sáida padrão do sistema em JavaScript.',\n        'en-US': 'Write the string \"hello world\" to the standard output in JavaScript.'\n    },\n    solution: {\n        'pt-BR': [\n            'Clique no microfone para começar a gravação.',\n            'Clique na primeira linha do editor de código.',\n            'Diga a frase: \"vá para a linha 4.\"',\n            'Diga a frase: \"execute a função mostrar com um argumento\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"texto olá mundo texto\".',\n            `Diga a frase: \"execute o arquivo atual\" ou clique no ícone verde acima do editor de código\n                para executar o código.`,\n            '<i>Valide a saída do programa no seção abaixo do editor de código.</i>',\n            'Fim.'\n        ],\n        'en-US': [\n            'Click on the microphone to start recording.',\n            'Click on the first line of the code editor.',\n            'Say the phrase: \"go to line number 4.\"',\n            'Say the phrase: \"execute function print with one argument\".',\n            'Say the phrase: \"text hello world text\".',\n            `Say the phrase: \"please the run current file\" or click on the green icon above the code editor.`,\n            '<i>Check the program output in the section below the code editor.</i>',\n            'Done.'\n        ]\n    },\n    code: {\n        'pt-BR': `const mostrar = console.log\\n\\n`,\n        'en-US': `const print = console.log\\n\\n`\n    }\n}\n\nconst avg: Problem = {\n    id: 'avg',\n    title: {\n        'pt-BR': 'Média',\n        'en-US': 'Mean'\n    },\n    placeholder: {\n        'pt-BR': `Computar a média entre dois números.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> É possível dizer \"remover linha\" para remover a linha atual.<br/>\n            <i class=\"fa fa-info-circle\"></i> Diga \"desfaça isso\" ou \"refaça isso\" para desfazer e refazer o último comando.`,\n        'en-US': `Calculate the mean between two numbers.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> It's possible to say \"remove line\" to remove the current line.<br/>\n            <i class=\"fa fa-info-circle\"></i> Say \"undo that\" or \"redo that\" to undo or redo the last command.`\n    },\n    statement: {\n        'pt-BR': 'Crie uma função que retorne a média de entre dois números.',\n        'en-US': 'Write a function to compute the average of two numbers.'\n    },\n    solution: {\n        'pt-BR': [\n            'Clique no microfone para começar a gravação.',\n            'Clique na primeira linha do editor de código.',\n            'Diga a frase: \"vá para a linha 2.\"',\n            'Diga a frase: \"nova função média com 2 argumentos retornando gap\".',\n            'Diga a frase: \"variável b\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"variável c\".',\n            'Diga a frase: \"linha 3\".',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"linha 3\"',\n            'Diga a frase: \"nova constante soma igual a gap\".',\n            'Diga a frase: \"expressão variável b mais variável c\".',\n            'Diga a frase: \"linha 4\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"expressão variável soma dividido por número 2\".',\n            'Diga a frase: \"execute o arquivo atual\".',\n            '<i>Valide a saída do programa.</i>',\n            'Fim.'\n        ],\n        'en-US': [\n            'Click on the microphone to start recording.',\n            'Click on the first line of the code editor.',\n            'Say the phrase: \"go to line number 2.\"',\n            'Say the phrase: \"new function mean with 2 arguments returning gap\".',\n            'Say the phrase: \"variable b\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"variable c\".',\n            'Say the phrase: \"line 3\".',\n            'Say the phrase: \"please create a line\".',\n            'Say the phrase: \"line 3\".',\n            'Say the phrase: \"new constant sum equals gap\".',\n            'Say the phrase: \"expression variable b plus variable c\".',\n            'Say the phrase: \"line 4\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"expression variable sum divided by number 2\".',\n            `Say the phrase: \"run current file\" or click on the green icon above the code editor.`,\n            '<i>Check the program output in the section below the code editor.</i>',\n            'Done.'\n        ]\n    },\n    code: {\n        'pt-BR': `\\n\\nconsole.log(média(23, 7))`,\n        'en-US': `\\n\\nconsole.log(mean(23, 7))`\n    }\n}\n\nconst perfectSquare: Problem = {\n    id: 'perfectSquare',\n    title: {\n        'pt-BR': 'Quadrado Perfeito',\n        'en-US': 'Perfect Square'\n    },\n    placeholder: {\n        'pt-BR': 'Teste se um número é um quadrado perfeito.<br/><br/><i class=\"fa fa-info-circle\"></i> É possível dizer \"escreva ...\" para escrever qualquer coisa na linha atual.',\n        'en-US': 'Test if a number is a perfect square.<br/><br/><i class=\"fa fa-info-circle\"></i> It\\'s possible to say \"write ...\" to write anything in the current line.'\n    },\n    statement: {\n        'pt-BR': `Crie uma função para checar se um número é um quadrado perfeito. Escreva na tela\n            'quadrado perfeito' em caso positivo e 'quadrado imperfeito' em caso negativo.`,\n        'en-US': `Write a function to check if a given number is a perfect square.\n            Write to the standard output <i>'perfect square'</i> if yes and <i>'imperfect square'</i> if no.`\n    },\n    solution: {\n        'pt-BR': [\n            'Clique no microfone para começar a gravação.',\n            'Clique na primeira linha do editor de código.',\n            'Diga a frase: \"vá para a linha 2.\"',\n            'Diga a frase: \"nova função quadrado com um argumento\".',\n            'Diga a frase: \"variável número\".',\n            'Diga a frase: \"linha 3\".',\n            'Diga a frase: \"variável número igual gap\".',\n            'Diga a frase: \"mude a linguagem para inglês\".',\n            '<i>A partir de agora os comandos de voz serão ditos em inglês.</i>',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"execute function gap on namespace math with one argument\".',\n            'Say the phrase: \"write SQRT\".<br/><i>Just say the letters, you can try multiple times</i>.',\n            'Say the phrase: \"switch back language back to portuguese\".',\n            '<i>A partir de agora os comandos de voz serão ditos em português.</i>',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"variável número\".',\n            'Diga a frase: \"ponteiro final da linha\".',\n            'Diga a frase: \"linha nova\".',\n            'Diga a frase: \"estrutura condicional se senão expressão gap igual ao número 0\".',\n            'Diga a frase: \"expressão variável número módulo número 1\".',\n            'Diga a frase: \"linha 5\".',\n            'Diga a frase: \"execute a função mostrar com o argumento texto quadrado perfeito texto\".',\n            'Diga a frase: \"linha 7\".',\n            'Diga a frase: \"execute a função mostrar com o argumento texto quadrado imperfeito texto\".',\n            'Diga a frase: \"execute o arquivo atual\".',\n            '<i>Valide a saída do programa.</i>',\n            'Fim.'\n        ],\n        'en-US': [\n            'Click on the microphone to start recording.',\n            'Click on the first line of the code editor.',\n            'Say the phrase: \"go to line number 2.\"',\n            'Say the phrase: \"new function square with one argument\".',\n            'Say the phrase: \"variable number\".',\n            'Say the phrase: \"line 3\".',\n            'Say the phrase: \"variable number equals gap\".',\n            'Say the phrase: \"call function gap on namespace math with one argument\".',\n            'Say the phrase: \"write SQRT\".<br/><i>Just say the letters, you can try multiple times</i>.',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"variable number\".',\n            'Say the phrase: \"pointer end of line\".',\n            'Say the phrase: \"create a line\".',\n            'Say the phrase: \"conditional statement if else expression gap equals number 0\".',\n            'Say the phrase: \"expression variable number module number 1\".',\n            'Say the phrase: \"line 5\".',\n            'Say the phrase: \"call function print with the argument string perfect square string\".',\n            'Say the phrase: \"line 7\".',\n            'Say the phrase: \"execute function print with one argument\".',\n            'Say the phrase: \"text imperfect square text\".',\n            `Say the phrase: \"run current file\" or click on the green icon above the code editor.`,\n            '<i>Check the program output in the section below the code editor.</i>',\n            'Done.'\n        ]\n    },\n    code: {\n        'pt-BR': '\\n\\nvar mostrar = console.log\\nquadrado(4)\\nquadrado(13)',\n        'en-US': '\\n\\nvar print = console.log\\nsquare(4)\\nsquare(13)'\n    }\n}\n\nconst multiplesOfSevenAndSix: Problem = {\n    id: 'multipleSevenSix',\n    title: {\n        'pt-BR': 'Múltiplos de 6 ou 7',\n        'en-US': 'Multiples of 6 or 7'\n    },\n    placeholder: {\n        'pt-BR': `Use um <i>for loop</i> para listar múltiplos de 6 ou 7.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> É possível dizer \"selecione da linha 3 até a linha 6\" para selecionar o intervalo\n            entre estas linhas ou ainda \"selecione da letra A até a letra T\" para selecionar o\n            texto entre essas letras na linha atual.`,\n        'en-US': `Use a <i>for loop</i> to list every multiple of 6 or 7.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> It's possible to say \"select from line 3 to line 6\" to select the interval between\n            those lines or even \"select from letter A to the letter T\" to select the interval between those letters in the current line.`\n    },\n    statement: {\n        'pt-BR': `Escreva na tela todos os múltiplos dos números 6 ou 7 no intervalo 0..256.`,\n        'en-US': `Write a function to list every multiple of the number 6 or 7 in the inverval 0..256.`\n    },\n    solution: {\n        'pt-BR': [\n            'Clique no microfone para começar a gravação.',\n            'Clique na segunda linha do editor de código.',\n            'Diga a frase: \"vá para a linha 4\".',\n            'Diga a frase: \"estrutura de repetição do número 0 até o número 256\".',\n            'Diga a frase: \"linha 5\".',\n            'Diga a frase: \"estrutura condicional expressão gap ou gap\".',\n            'Diga a frase: \"expressão gap módulo número 6 igual ao número 0\".',\n            'Diga a frase: \"variável i\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"expressão gap módulo número 7 igual ao número 0\".',\n            'Diga a frase: \"variável i\".',\n            'Diga a frase: \"linha 6\".',\n            'Diga a frase: \"execute a função mostrar com o argumento variável i\".',\n            'Diga a frase: \"execute o arquivo atual\".',\n            '<i>Valide a saída do programa.</i>',\n            'Fim.'\n        ],\n        'en-US': [\n            'Click on the microphone to start recording.',\n            'Click on the first line of the code editor.',\n            'Say the phrase: \"go to line number 4.\"',\n            'Say the phrase: \"repetition statement from number 0 to number 256\".',\n            'Say the phrase: \"line 5\".',\n            'Say the phrase: \"conditional statement expression gap or gap\".',\n            'Say the phrase: \"expression gap module number 6 equals number 0\".',\n            'Say the phrase: \"variable i\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"expression gap module number 7 equals number 0\".',\n            'Say the phrase: \"variável i\".',\n            'Say the phrase: \"line 6\".',\n            'Say the phrase: \"call function print with the argument variable i\".',\n            `Say the phrase: \"run current file\" or click on the green icon above the code editor.`,\n            '<i>Check the program output in the section below the code editor.</i>',\n            'Done.'\n        ]\n    },\n    code: {\n        'pt-BR': 'var mostrar = console.log\\n\\n',\n        'en-US': 'var print = console.log\\n\\n'\n    }\n}\n\nconst happyNumber: Problem = {\n    id: 'happyNumber',\n    title: {\n        'pt-BR': 'Número Feliz',\n        'en-US': 'Happy Number'\n    },\n    placeholder: {\n        'pt-BR': `Teste se um número qualquer <i>N</i> é um <a target=\"_blank\" href=\"https://pt.wikipedia.org/wiki/N%C3%BAmero_feliz\">Número Feliz</a>.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> É possível dizer \"troque a linguagem para inglês\" para mudar o idioma de entrada para inglês.`,\n        'en-US': `Test if a given number <i>N</i> is a <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Happy_number\">Happy Number</a>.<br/><br/>\n            <i class=\"fa fa-info-circle\"></i> It's possible to say \"change language to portuguese\" to change the input language to portuguese.`\n    },\n    statement: {\n        'pt-BR': `Complete a função para determinar se um número natural qualquer é um\n            <a target=\"_blank\" href=\"https://pt.wikipedia.org/wiki/N%C3%BAmero_feliz\">número feliz</a>.`,\n        'en-US': `Complete the function to test if a given natural number is a \n            <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Happy_number\">Happy Number</a>. \n            <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=ee2If8jSxUo&t=19s\">(happy primes)</a>`\n    },\n    solution: {\n        'pt-BR': [\n            'Clique no microfone para começar a gravação.',\n            'Clique na segunda linha do editor de código.',\n            'Diga a frase: \"linha 5\".',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"linha 5\".',\n            'Diga a frase: \"estrutura condicional expressão gap igual a número 1\".',\n            'Diga a frase: \"variável valor\".',\n            'Diga a frase: \"linha 6\".',\n            'Diga a frase: \"retorne verdadeiro\".',\n            'Diga a frase: \"linha 7\".',\n            'Diag a frase: \"ponteiro final da linha\"',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"estrutura condicional\".',\n            'Diga a frase: \"execute a função gap na variável visitados com o argumento variável valor\".',\n            'Diga a frase: \"linha 9\".',\n            'Diga a frase: \"retorne falso\".',\n            'Diga a frase: \"linha 11\".',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"linha 11\".',\n            'Diga a frase: \"execute a função gap na variável visitados com o argumento variável valor\".',\n            'Diga a frase: \"ponteiro final da linha\".',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"nova variável soma igual a número 0\".',\n            'Diga a frase: \"criar linha\".',\n            'Diga a frase: \"estrutura de repetição para todo item em gap\".',\n            'Diga a frase: \"expressão variável valor mais texto texto\".',\n            'Diga a frase: \"linha 14\".',\n            'Diga a frase: \"variável soma igual a expressão variável soma mais gap vezes gap\".', // maybe fix that: select gap when its done.\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"variável item\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"variável item\".',\n            'Diga a frase: \"linha 16\".',\n            'Diga a frase: \"selecione a palavra gap\".',\n            'Diga a frase: \"execute a função feliz com os argumentos variável soma e variável visitados\".',\n            'Diga a frase: \"mude a linguagem para inglês\".',\n            '<i>A partir de agora os comandos de voz serão ditos em inglês.</i>',\n\n            'Say the phrase: \"please go to line 8\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"print has\".',\n\n            'Say the phrase: \"line 11\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"print add\".',\n\n            'Say the phrase: \"run current file\".',\n            '<i>Validate the system output.</i>',\n\n            'End.'\n        ],\n        'en-US': [\n            'Click on the microphone to start recording.',\n            'Click on the first line of the code editor.',\n            'Say the phrase: \"line 5\".',\n            'Say the phrase: \"create line\".',\n            'Say the phrase: \"line 5\".',\n            'Say the phrase: \"conditional statement expression gap equals number 1\".',\n            'Say the phrase: \"variable value\".',\n            'Say the phrase: \"line 6\".',\n            'Say the phrase: \"return true\".',\n            'Say the phrase: \"line 7\".',\n            'Say the phrase: \"pointer end of line\"',\n            'Say the phrase: \"create a line\".',\n            'Say the phrase: \"conditional statement\".',\n            'Say the phrase: \"execute function has on variable visited with one argument\".',\n            'Say the phrase: \"variable value\".',\n            'Say the phrase: \"line 9\".',\n            'Say the phrase: \"return false\".',\n            'Say the phrase: \"line 11\".',\n            'Say the phrase: \"create line\".',\n            'Say the phrase: \"line 11\".',\n            'Say the phrase: \"execute function add on variable visited with argument variable value\".',\n            'Say the phrase: \"pointer end of line\".',\n            'Say the phrase: \"create line\".',\n\n            'Say the phrase: \"new variable sum equals number 0\".',\n            'Say the phrase: \"create line\".',\n            'Say the phrase: \"repetition statement for every item in gap\".',\n            // change to quote\n            'Say the phrase: \"execute function quote to string quote on variable value\".',\n            'Say the phrase: \"line 14\".',\n            'Say the phrase: \"variable sum equals expression variable sum plus gap times gap\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"variable item\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"variable item\".',\n            'Say the phrase: \"line 16\".',\n            'Say the phrase: \"select the word gap\".',\n            'Say the phrase: \"call function happy with arguments variable sum and variable visited\".',\n            `Say the phrase: \"run current file\" or click on the green icon above the code editor.`,\n            '<i>Check the program output in the section below the code editor.</i>',\n            'Done.'\n        ]\n    },\n    code: {\n        'pt-BR':\n            'var mostrar = console.log\\n\\n' +\n            'function feliz(valor, visitados) {\\n' +\n            '    return gap\\n' +\n            '}\\n' +\n            '\\n' +\n            'mostrar(23, feliz(23, new Set()))\\n' +\n            'mostrar(4, feliz(4, new Set()))\\n' +\n            'mostrar(440, feliz(440, new Set()))\\n' +\n            'mostrar(3, feliz(3, new Set()))\\n',\n        'en-US':\n            'var print = console.log\\n\\n' +\n            'function happy(value, visited) {\\n' +\n            '    return gap\\n' +\n            '}\\n' +\n            '\\n' +\n            'print(23, happy(23, new Set()))\\n' +\n            'print(4, happy(4, new Set()))\\n' +\n            'print(440, happy(440, new Set()))\\n' +\n            'print(3, happy(3, new Set()))\\n',\n    }\n}\n\n\nconst problems = [welcome, avg, perfectSquare, multiplesOfSevenAndSix, happyNumber]\n\nexport default problems\n\nexport const concretize = (index: number, lang: 'pt-BR' | 'en-US') => ({\n    get id() { return problems[index].id },\n    get index() { return index },\n    get title() { return problems[index].title[lang] },\n    get placeholder() { return problems[index].placeholder[lang] },\n    get statement() { return problems[index].statement[lang] },\n    get solution() { return problems[index].solution[lang] },\n    get code() { return problems[index]?.code?.[lang] ||'' },\n})\n","import React from 'react'\nimport { concretize } from '../tutorial/problems'\n\ndeclare global {\n    interface Console { logs?: string[][], defaultLog?: Function }\n}\n\nexport type MyContextType = {\n    changeProblem: (id: number) => void\n    changeLanguage: (lang: string) => any\n    problem: ReturnType<typeof concretize>,\n    isMobile: boolean\n} & State\n\ntype State = {\n    language: string\n    problemIndex: number\n}\n\n// @ts-ignore\nexport const GlobalContext = React.createContext<MyContextType>({})\n\nexport default function GloablContext(props: { children: any, lang: string }) {\n    const [state, setState] = React.useState<State>({\n        language: props.lang,\n        problemIndex: 0\n    })\n\n    const changeLanguage = React.useCallback((lang: string) => setState((s) => ({...s, language: lang})), [])\n\n    const changeProblem = React.useCallback((id: number) => setState((s) => ({ ...s, problemIndex: id })), [])\n\n    const isMobile = window.matchMedia(\"only screen and (max-width: 900px)\").matches\n\n    const value = React.useMemo(() => ({\n        language: state.language,\n        problemIndex: state.problemIndex,\n        changeProblem,\n        changeLanguage,\n        isMobile,\n        problem: concretize(state.problemIndex, state.language as 'en-US' | 'pt-BR'),\n    }), [state.language, state.problemIndex, changeLanguage, changeProblem, isMobile])\n\n    return (\n        <GlobalContext.Provider value={value}>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}","import React from 'react';\nimport CodeMirror from 'codemirror'; // Import CodeMirror as default\nimport EditorService from '../services/editor';\nimport { GlobalContext } from '../services/global-context';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/idea.css';\nimport 'codemirror/addon/selection/active-line.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport './style.scss';\n\ninterface Props {}\n\n// We will infer the type using ReturnType<typeof CodeMirror>\nlet myCodeMirror: ReturnType<typeof CodeMirror> | null = null;\n\nexport default React.memo(function Editor(props: Props) {\n    const [result, setResult] = React.useState('');\n    const [loading, setLoading] = React.useState(false);\n\n    const { problem } = React.useContext(GlobalContext);\n\n    React.useEffect(() => {\n        const editorElement = document.querySelector<HTMLDivElement>('#code-editor');\n        \n        if (editorElement) {\n            myCodeMirror = CodeMirror(editorElement, {\n                lineNumbers: true,\n                mode: 'javascript',\n                styleActiveLine: true,\n                matchBrackets: true,\n                theme: 'idea',\n                indentUnit: 4,\n                value: '// your code will be written here\\n' + problem.code\n            });\n\n            EditorService.setEditor(myCodeMirror);\n\n            EditorService.onRunCode({\n                before: () => setLoading(true),\n                success: (result: string) => setResult(result),\n                error: (ex: Error) => setResult(ex.toString()),\n                after: () => setLoading(false)\n            });\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        myCodeMirror?.setValue('// your code will be written here\\n' + problem.code);\n        setResult('');\n    }, [problem.index, problem.code]);\n\n    return (\n        <div>\n            <div className=\"code-editor-wrapper\">\n                <div className=\"filename\">\n                    MyLittleDarkAge.js\n                    <span\n                        onClick={() => EditorService.runCode()}\n                        title=\"Click here to run this file\"\n                        className={`${loading ? 'loading' : ''}`}\n                    >\n                        {loading && <i className=\"fa fa-circle-o-notch fa-spin fa-3x\"></i>}\n                        {!loading && <i className=\"fa fa-caret-right\"/>}\n                    </span>\n                </div>\n                <div id=\"code-editor\"></div>\n            </div>\n            <div className={`output ${loading ? 'loading' : ''}`}>\n                <div>\n                    <i className=\"fa fa-angle-right\"></i>\n                    {loading && <span className=\"fa-3x\"><i className=\"fa fa-circle-o-notch fa-spin\"></i></span>}\n                </div>\n                {!loading && <pre>{result === '' ? 'empty output' : result}</pre>}\n            </div>\n        </div>\n    );\n});","import { ElectronIpc } from '../../../services/electron-ipc'\nimport SpokenInterface from './spoken-interface'\n\ndeclare global {\n    interface Window { recording: boolean }\n}\n\nexport interface IPCEvent {\n    reply: (channel: string, ...args: any) => void\n}\n\nclass IPCService implements ElectronIpc {\n    private handles = new Map<string, (event: IPCEvent, ...args: any) => void>()\n\n    constructor() {        \n        this.onMain('Spoken:executeCommand', SpokenInterface.onComand)\n        this.onMain('Config:changeEditor', (event: IPCEvent, editor: any) => {\n            this.send('Config:onChangeEditorState', [{ name: 'CODEMIRROR', status: 'ON', current: true }])\n        })\n\n        this.onMain('VoiceRecognition:setRecording', (event: IPCEvent, value: boolean) => {\n            this.send('VoiceRecognition:toggleRecording', value)\n        })\n    }\n\n    send(channel: string, ...args: any) {\n        if (this.handles.has(channel)) {\n            const cb = this.handles.get(channel)!\n\n            setTimeout(() => cb({ reply: this.send.bind(this) }, ...args), 75)\n        }\n    }\n\n    removeAllListeners (channel: string) {\n        this.handles.delete(channel)\n    }\n\n    on(channel: string, cb: (...args: any) => void) {\n        // Remove Event argument\n        this.handles.set(channel, (event: IPCEvent, ...args) => cb(...args))\n    }\n\n    onMain(channel: string, cb: (event: IPCEvent, ...args: any) => void) {\n        this.handles.set(channel, cb)\n    }\n}\n\nwindow.ipcRenderer = window.ipcRenderer || new IPCService()\n\nexport default window.ipcRenderer","export default class MyRecognizer {\n\tstatic instance = null;\n\trecognizing = false;\n\trecognizer = null;\n\thandlers = new Map();\n\tisAndroid = navigator.userAgent.toLowerCase().indexOf('android') > -1;\n\n\tstatic getRecognizer() {\n\t\tif (MyRecognizer.instance == null) {\n\t\t\tMyRecognizer.instance = new MyRecognizer();\n\t\t}\n\n\t\treturn MyRecognizer.instance;\n\t}\n\n\tasync init(lang) {\n\t\ttry {\n\t\t\tthis.recognizer = new webkitSpeechRecognition();\n\t\t} catch (err) {\n\t\t\treturn this.handlers.get('error') != null ? this.handlers.get('error')(err) : null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst speechRecognitionList = new webkitSpeechGrammarList();\n\t\t\tspeechRecognitionList.addFromString('#JSGF V1.0; grammar one; public <gap> = gap;', 1);\n\t\t\tspeechRecognitionList.addFromString('#JSGF V1.0; grammar one; public <string> = string;', 1);\n\n\t\t\tthis.recognizer.grammars = speechRecognitionList;\n\t\t} catch (err) {\n\t\t\tconsole.info('Safari does not implement webkitSpeechGrammarList.');\n\t\t}\n\n\t\tthis.recognizer.continuous = true;\n\t\tthis.recognizer.lang = lang;\n\t\tthis.recognizer.interimResults = false;\n\t\tthis.recognizer.maxAlternatives = 1;\n\n\t\tthis.recognizer.onresult = (event) => {\n\t\t\tconsole.log('[Chrome Recognizer] Results', event.results);\n\n\t\t\tconst fn = this.handlers.get('results');\n\n\t\t\tif (fn != null) fn(event.results, true);\n\t\t};\n\n\t\tthis.recognizer.onspeechend = (event) => {\n\t\t\tconsole.log('[Chrome Recognizer] SpeechEnd', event);\n\t\t};\n\n\t\tthis.recognizer.onend = (event) => {\n\t\t\tconsole.log('[Chrome Recognizer] End', event);\n\n\t\t\t// Mobile Android Google Chrome does not respect continuous mode.\n\t\t\t// I don't know about other browsers.\n\t\t\tif (this.isAndroid && this.recognizing) {\n\t\t\t\tconsole.log('[Buggy Android Chrome Recognizer] Premature ending! We are still talking.');\n\t\t\t\tthis.start();\n\t\t\t}\n\t\t};\n\n\t\tthis.recognizer.onnomatch = (event) => {\n\t\t\tconsole.log('Could not recognize that!');\n\t\t};\n\n\t\tthis.recognizer.onerror = (event) => {\n\t\t\tconst fn = this.handlers.get('error');\n\n\t\t\tif (fn != null) fn(event.error);\n\t\t};\n\t}\n\n\tstart() {\n\t\tif (this.recognizer == null) {\n\t\t\treturn console.error('[webapp.services.chrome-voice-recognition]: Session is closed!');\n\t\t}\n\n\t\tthis.recognizer.start();\n\t\tthis.recognizing = true;\n\n\t\tconsole.info('[webapp.services.chrome-voice-recognition]: Started');\n\t}\n\n\tstop() {\n\t\tthis.recognizing = false;\n\n\t\tif (this.recognizer == null) {\n\t\t\treturn console.error('[webapp.services.chrome-voice-recognition]: Session is closed!');\n\t\t}\n\n\t\tthis.recognizer.stop();\n\n\t\tconsole.info('[webapp.services.chrome-voice-recognition]: Stopped');\n\t}\n\n\tdestroy() {\n\t\tconsole.info('[webapp.services.chrome-voice-recognition]: Destroyed');\n\n\t\tif (this.recognizer) {\n\t\t\tthis.recognizer.stop();\n\t\t\tthis.recognizer.abort();\n\t\t}\n\n\t\tthis.recognizer = null;\n\t\tthis.handlers.clear();\n\t}\n\n\ton(event, fn) {\n\t\tthis.handlers.set(event, fn);\n\t\treturn this;\n\t}\n}\n","import { useState, useEffect, useContext } from 'react';\nimport Spoken from 'spoken';\nimport IpcRenderer from '../electron-ipc';\nimport MyRecognizer from './voice-recognizer';\nimport { GlobalContext } from '../global-context';\n\nconst useChromeVoiceRecognition = () => {\n\tconst [ results, setResults ] = useState(null);\n\tconst [ error, setError ] = useState(null);\n\tconst { language = 'pt-BR', executeInternalCommand } = useContext(GlobalContext);\n\tconst recognizer = MyRecognizer.getRecognizer();\n\n\tuseEffect(() => {\n\t\tIpcRenderer.on('Spoken:executeCommandResult', (result) => {\n\t\t\t// console.log('[webapp.services.chrome-voice-recognition.onResultError]: Execute command result: ', result)\n\t\t});\n\n\t\treturn () => {\n\t\t\tIpcRenderer.removeAllListeners('Spoken:executeCommandResult');\n\t\t};\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('[webapp.services.chrome-voice-recognition]: Initializing');\n\n\t\t\trecognizer\n\t\t\t\t.on('results', (results, isFinal) => {\n\t\t\t\t\tconst result = results[results.length - 1][0];\n\n\t\t\t\t\tif (!result.transcript || result.transcript.trim() === '') return;\n\n\t\t\t\t\tresult.text = result.transcript.trim();\n\n\t\t\t\t\tconst attempt = {\n\t\t\t\t\t\ttext: sanitizePonctuation(result.text, language),\n\t\t\t\t\t\tisFinal,\n\t\t\t\t\t\tid: Date.now(),\n\t\t\t\t\t\trecognized: false\n\t\t\t\t\t};\n\n\t\t\t\t\tif (isFinal) {\n\t\t\t\t\t\tconst match = findComand(result, language);\n\n\t\t\t\t\t\tattempt.recognized = !!match;\n\t\t\t\t\t\tattempt.command = match ? match.id : null;\n\n\t\t\t\t\t\tif (attempt.recognized) {\n\t\t\t\t\t\t\tif (match && match.id && match.id.startsWith('__')) {\n\t\t\t\t\t\t\t\texecuteInternalCommand(match);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tIpcRenderer.send('Spoken:executeCommand', match);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsetResults(attempt);\n\t\t\t\t})\n\t\t\t\t.on('error', (err) => {\n\t\t\t\t\tsetError({\n\t\t\t\t\t\t__error: err,\n\t\t\t\t\t\tmainTitle: 'Chrome STT provider is vendor specific',\n\t\t\t\t\t\ttitle: 'This browser does not support the SpeechRecognition API',\n\t\t\t\t\t\tsubTitle: 'Try switching STT provider to Azure or accessing this website using Chrome or Edge',\n\t\t\t\t\t\tbody: `Not all browsers support the <i>webkitSpeechRecognition</i> API which powers this project, currently only Google Chrome,\n                    MS Edge and Safari* have support to it. Try viewing this website on a supported browser or change the STT provider to Azure on\n                    top bar menu.<br/><br/>\n                    <b>You can still use the debug option to write commands instead of saying them.</b>`\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error('[webapp.services.chrome-voice-recognition.onResultError]: Error', err);\n\t\t\t\t})\n\t\t\t\t.init(language);\n\n\t\t\treturn () => {\n\t\t\t\trecognizer.destroy();\n\t\t\t};\n\t\t},\n\t\t[ language ]\n\t);\n\n\tconst start = async () => {\n\t\trecognizer.start();\n\t};\n\n\tconst stop = async () => {\n\t\trecognizer.stop();\n\t};\n\n\tconst analyzeSentence = async (phrase, timeout = 3000) => {\n\t\tconst match = findComand({ text: sanitizePonctuation(phrase, language) }, language);\n\n\t\tconst attempt = {\n\t\t\ttext: phrase,\n\t\t\tisFinal: true,\n\t\t\tid: Date.now(),\n\t\t\trecognized: !!match,\n\t\t\tcommand: match ? match.id : null\n\t\t};\n\n\t\tconst fn = () => {\n\t\t\tsetResults(attempt);\n\t\t\tif (attempt.recognized) {\n\t\t\t\tif (match && match.id && match.id.startsWith('__')) {\n\t\t\t\t\texecuteInternalCommand(match);\n\t\t\t\t} else {\n\t\t\t\t\tIpcRenderer.send('Spoken:executeCommand', match);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (timeout) setTimeout(fn, timeout);\n\t\telse fn();\n\t};\n\n\treturn {\n\t\tresults,\n\t\tstart,\n\t\tstop,\n\t\terror,\n\t\tsetError,\n\t\tanalyzeSentence\n\t};\n};\n\nfunction findComand(voiceToTextResponse, language) {\n\tconst text = sanitizePonctuation(voiceToTextResponse.text, language);\n\tconst result = Spoken.recognizePhrase(text.toLocaleLowerCase(), language);\n\n\tif (result != null) {\n\t\tresult.extra._rawVoiceToTextResponse = voiceToTextResponse;\n\t\tresult.extra.phrase = text;\n\t}\n\n\treturn result;\n}\n\nfunction sanitizePonctuation(text, language) {\n\ttext = text.replace(/(?<! )(:|\\*|,|\\.|\\?|!)/gi, ' $1');\n\n\t// sorry...\n\t// TODO: FIXME\n\tif (language === 'pt-BR') {\n\t\treturn text.replace(/aspa(s|)/gi, '*');\n\t} else {\n\t\treturn text.replace(/quote(s|)/gi, '*');\n\t}\n}\n\nexport default useChromeVoiceRecognition;\n","import React from 'react'\nimport Draggable from 'react-draggable'\nimport '../services/ipc-service-emulator'\nimport useChromeVoiceRecognition from '../../../services/chrome/use-voice-recognition'\nimport useAzureVoiceRecognition from '../../../services/azure/use-voice-recognition'\nimport { GlobalContext } from '../services/global-context'\nimport { factory as AppFactory } from '../../app'\nimport './style.scss'\n\nconst stt = localStorage.getItem('STT') || 'azure'\n\nconst App = AppFactory(stt === 'azure' ? useAzureVoiceRecognition : useChromeVoiceRecognition)\n\nexport default React.memo(function Editor() {\n    const { language, isMobile } = React.useContext(GlobalContext)\n\n    if (isMobile) return (\n        <AppMobile language={language} />\n    )\n\n    return (\n        <Draggable\n            axis=\"both\"\n            handle=\".handle\"\n            cancel=\".control\"\n            defaultPosition={{x: -250, y: -50}}\n        >\n            <div>\n                <Speech2Code mode=\"modalx\" language={language} />\n            </div>\n        </Draggable>\n    )\n})\n\nconst AppMobile = (props: { language: string }) => {\n    const [mode, setMode] = React.useState<'widget' | 'modalx'>(\n        // Yep, I know...\n        window.location.pathname.includes('webapp') && window.location.hash !== '' ? 'modalx' : 'widget'\n    )\n\n    const wrapper = document.querySelector('.speech2code-wrapper')\n\n    if (wrapper && mode === 'modalx') {\n        // @ts-ignore\n        wrapper.setAttribute('style', `--window-size-height: ${window.visualViewport.height - 25}px`)\n    }\n\n    return (\n        <React.Fragment>\n            <div className={`overlay ${mode}`}></div>\n            <Speech2Code\n                mode={mode}\n                openModal={() => setMode('modalx')}\n                closeModal={() => setMode('widget')}\n                language={props.language}\n            />\n        </React.Fragment>\n    )\n}\n\nconst Speech2Code = (props: {\n    mode: 'widget' | 'modalx',\n    closeModal?: () => void,\n    openModal?: () => void,\n    language: string\n}) => {\n\n    return (\n        <div className={`speech2code-wrapper ${props.mode}`}>\n            <div className=\"window\">\n                <div className=\"handle top-bar\">\n                    <div className=\"window-title\">Speech2Code</div>\n                    <div className=\"controls\">\n                        <div className={`control ${!props.closeModal ? 'disabled' : ''}`}>\n                            <i\n                                className=\"fa fa-window-close\"\n                                onClick={() => {\n                                    if (props.closeModal) {\n                                        // @ts-ignore\n                                        document.querySelector('#root').style = 'position: unset'\n                                        window.location.hash = ''\n                                        props.closeModal()\n                                    }\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"window-content\">\n                    <App\n                        initialLang={props.language}\n                        mode={props.mode}\n                        onOpen={() => {\n                            if (!props.openModal) return null\n\n                            // @ts-ignore\n                            document.querySelector('#root').style = 'position: fixed'\n                            props.openModal()\n                        }}\n                        onToggleRecording={(recording: boolean) => {\n                            if (recording && props.closeModal) {\n                                // @ts-ignore\n                                document.querySelector('#root').style = 'position: unset'\n                                props.closeModal()\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport Problems from './problems'\nimport { GlobalContext } from '../services/global-context'\nimport './style.scss'\n\ninterface Props {}\n\nexport default function Tutorial(props: Props) {\n    const { language: lang, problem, changeProblem } = React.useContext(GlobalContext)\n\n    return (\n        <div className=\"tutorial-problem\">\n            <div className=\"title\">\n                {problem.title}&nbsp;<span style={{fontSize: '14px'}}>{(problem.index + 1)}/5</span>\n            </div>\n            <div className=\"placeholder\" dangerouslySetInnerHTML={{__html: problem.placeholder}}>\n            </div>\n            <div className=\"statement\">\n                <div>\n                    <b>{lang === 'pt-BR' ? 'Problema' : 'Problem'}</b>\n                </div>\n                <div dangerouslySetInnerHTML={{__html: problem.statement}}></div>\n            </div>\n            <div className=\"solution\">\n                <div>\n                    <b>{lang === 'pt-BR' ? 'Possível solução' : 'Possible solution'}</b>\n                </div>\n                <div>\n                    <ul>\n                        {problem.solution.map((item: string, index: number) => (\n                            <li key={index} dangerouslySetInnerHTML={{__html: fmt(item)}}></li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"footer\">\n                <div className=\"prev\">\n                    {problem.index <= 0 ? null : (\n                        <button\n                            onClick={() => {\n                                window.ipcRenderer.send('VoiceRecognition:toggleRecording', false)\n                                changeProblem(problem.index - 1)\n                            }}\n                        >\n                            {'<<'} {lang === 'pt-BR' ? 'Anterior' : 'Previous'}\n                        </button>\n                    )}\n                </div>\n                <div className=\"next\">\n                    {!(problem.index < Problems.length - 1) ? null : (\n                        <button\n                            onClick={() => {\n                                window.ipcRenderer.send('VoiceRecognition:toggleRecording', false)\n                                changeProblem(problem.index + 1)\n                            }}\n                        >\n                            {lang === 'pt-BR' ? 'Próximo' : 'Next'} {'>>'}\n                        </button>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst fmt = (str: string) => {\n    return str.replace(/\"(.*)\"/gi, '<b>$1</b>')\n}\n","import React from 'react'\nimport Nav from '../@components/header'\nimport Editor from './editor'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Speech2Code from './speech2code'\nimport Tutorial from './tutorial'\nimport GlobalContext from './services/global-context'\nimport './style.scss'\n\nexport default React.memo(function Webapp(props: { lang: string }) {\n    return (\n        <GlobalContext lang={props.lang}>\n            <Nav />\n            <main className=\"webapp\">\n                <div className=\"tutorial\">\n                    <Tutorial />\n                </div>\n                <div className=\"code-editor\">\n                    <Editor />\n                </div>\n                <div className=\"speech2code\">\n                    <Speech2Code />\n                </div>\n            </main>\n        </GlobalContext>\n    )\n})\n","import CodeMirror from 'codemirror';\nimport { Editor as SpokenEditor } from 'spoken';\n\ninterface RunCodeLifeCycle {\n    before: () => void,\n    success: (result: string) => void,\n    error: (ex: Error) => void,\n    after: () => void\n}\n\n// @ts-ignore\nclass CodeMirrorEditor implements SpokenEditor {\n    // Infer the correct type using ReturnType<typeof CodeMirror>\n    private editor: ReturnType<typeof CodeMirror> | null = null;\n    private runCodeLifecycle: RunCodeLifeCycle | null = null;\n\n    public getEditor(): [ReturnType<typeof CodeMirror> | null, Error | null] {\n        const editor = this.editor;\n\n        if (editor == null) return [null, new Error('No active text editor')];\n\n        return [editor, null];\n    }\n\n    public setEditor(editor: ReturnType<typeof CodeMirror>) {\n        this.editor = editor;\n    }\n\n    public onRunCode(lifecycle: RunCodeLifeCycle): void {\n        this.runCodeLifecycle = lifecycle;\n    }\n\n    public runCode(): void {\n        const { after, before, error, success } = this.runCodeLifecycle!;\n\n        before();\n\n        const code = this.getEditor()[0]!.getValue();\n\n        this.runThisCode(code).then(success).catch(error).finally(after);\n    }\n\n    // The rest of the class methods remain unchanged\n    async write(text: string = '') {\n        console.log('[vscode-driver.robot-vscode.write]: Executing write(' + text + ')');\n\n        const [editor, e] = this.getEditor();\n\n        if (editor == null) throw e;\n\n        if (editor.getSelection().length > 0) {\n            const sel = editor.listSelections()[0];\n\n            editor.replaceSelection(text);\n\n            editor.setSelection(sel.anchor, { ...sel.head, ch: sel.anchor.ch + text.length });\n        } else {\n            editor.replaceRange(text, editor.getCursor());\n        }\n    }\n\n    // ... and so on with the other methods ...\n\n    private runThisCode(code: string) {\n        return new Promise<string>((res, rej) => {\n            try {\n                // eslint-disable-next-line no-eval\n                eval(`\n                    console.defaultLog = console.log.bind(console);\n                    console.logs = [];\n                    console.log = function() {\n                        console.defaultLog.apply(console, arguments);\n                        console.logs.push(Array.from(arguments));\n                    }\n    \n                    ${code}\n                `);\n    \n                const text = console.logs!.map(item => item.join(' ')).join('\\n');\n    \n                setTimeout(() => res(text), 1500);\n            } catch (ex) {\n                // Use type assertion to treat ex as Error\n                const error = ex as Error;\n                setTimeout(() => rej(error.toString()), 1500);\n            } finally {\n                if (console.defaultLog) {\n                    console.log = console.defaultLog.bind(console);\n                    delete console['defaultLog'];\n                }\n    \n                delete console['logs'];\n            }\n        });\n    }\n}\n\nexport default new CodeMirrorEditor();","import Spoken, { SpokenCommand } from 'spoken';\nimport EditorService from './editor';\nimport { IPCEvent } from './ipc-service-emulator';\n\n// @ts-ignore\nwindow.editor = EditorService;\n\nclass SpokenInterface {\n\n    onComand = async (event: IPCEvent, command: SpokenCommand, ...args: unknown[]) => {\n        if (command == null) {\n            return event.reply('Spoken:executeCommandResult', command, { err: 404 });\n        }\n\n        const [result, err] = await this.execute(command);\n\n        if (err) {\n            return event.reply('Spoken:executeCommandResult', { error: err.toString() || true });\n        }\n \n        console.info('[Spoken]: Result: ' + JSON.stringify(result || null));\n\n        return event.reply('Spoken:executeCommandResult', { result });\n    }\n\n    private async execute(command: SpokenCommand, parent?: string): Promise<[object | null, Error | null]> {\n        try {\n            // eslint-disable-next-line no-eval\n            const fn = eval(`var exports = {};\\n` + command.impl);\n            const [args, err] = await this.parseArgs(command.args, command.id);\n            \n            if (args == null || err != null) return [null, err];\n\n            const result = await fn({ ...args, parent }, EditorService, Spoken.context);\n\n            return [result, null];\n        } catch (err) {\n            console.error('[wrapper.SpokenInterface.onCommand] Failed to execute command \"' + command.id + '\" with:\\n', err);\n\n            // Ensure err is of type Error or wrap it in a new Error object\n            const error = err instanceof Error ? err : new Error('Unknown error occurred');\n            return [null, error];\n        }\n    }\n\n    private async parseArgs(args: any, parent: string): Promise<[object | null, Error | null]> {\n        for (const key of Object.keys(args)) {\n            const innerCommand = args[key] as any;\n\n            if (Array.isArray(innerCommand)) {\n                const arr = [];\n                for (const item of innerCommand) {\n                    if (!item.id || !item.impl || !item.lang) {\n                        arr.push(item);\n                        continue;\n                    }\n\n                    const [ab, err] = await this.execute(item, parent);\n            \n                    if (ab == null || err != null) return [null, err];\n\n                    arr.push(ab);\n                }\n                args[key] = arr;\n            } else {                \n                if (!innerCommand.id || !innerCommand.impl || !innerCommand.lang) continue;\n\n                const [result, err] = await this.execute(innerCommand, parent);\n\n                if (err != null) return [null, err];\n\n                args[key] = result;\n            }\n        }\n\n        return [args, null];\n    }\n}\n\nexport default new SpokenInterface();\n\n"],"names":["Header","props","root","lang","route","parseRoute","makeUrl","path","isSelected","page","stt","localStorage","getItem","changeStt","val","evt","preventDefault","setItem","window","location","reload","_jsxs","id","children","_jsx","src","alt","height","title","href","className","i18n","rel","target","style","marginRight","fontSize","onClick","ReactTooltip","multiline","effect","problems","placeholder","statement","solution","code","GlobalContext","React","GloablContext","state","setState","language","problemIndex","changeLanguage","s","changeProblem","isMobile","matchMedia","matches","value","problem","index","_problems$index","_problems$index$code","concretize","Provider","myCodeMirror","result","setResult","loading","setLoading","editorElement","document","querySelector","CodeMirror","lineNumbers","mode","styleActiveLine","matchBrackets","theme","indentUnit","EditorService","setEditor","onRunCode","before","success","error","ex","toString","after","_myCodeMirror","setValue","runCode","ipcRenderer","constructor","handles","Map","this","onMain","SpokenInterface","onComand","event","editor","send","name","status","current","channel","_len","arguments","length","args","Array","_key","has","cb","get","setTimeout","reply","bind","removeAllListeners","delete","on","set","_len2","_key2","MyRecognizer","recognizing","recognizer","handlers","isAndroid","navigator","userAgent","toLowerCase","indexOf","getRecognizer","instance","init","webkitSpeechRecognition","err","speechRecognitionList","webkitSpeechGrammarList","addFromString","grammars","console","info","continuous","interimResults","maxAlternatives","onresult","log","results","fn","onspeechend","onend","start","onnomatch","onerror","stop","destroy","abort","clear","findComand","voiceToTextResponse","text","sanitizePonctuation","Spoken","toLocaleLowerCase","extra","_rawVoiceToTextResponse","phrase","replace","useChromeVoiceRecognition","setResults","useState","setError","executeInternalCommand","useContext","useEffect","IpcRenderer","isFinal","transcript","trim","attempt","Date","now","recognized","match","command","startsWith","__error","mainTitle","subTitle","body","async","analyzeSentence","timeout","undefined","App","AppFactory","useAzureVoiceRecognition","AppMobile","Draggable","axis","handle","cancel","defaultPosition","x","y","Speech2Code","setMode","pathname","includes","hash","wrapper","setAttribute","visualViewport","openModal","closeModal","initialLang","onOpen","onToggleRecording","recording","Tutorial","dangerouslySetInnerHTML","__html","map","item","fmt","Problems","str","Nav","Editor","CodeMirrorEditor","runCodeLifecycle","getEditor","Error","lifecycle","getValue","runThisCode","then","catch","finally","write","e","getSelection","sel","listSelections","replaceSelection","setSelection","anchor","head","ch","replaceRange","getCursor","Promise","res","rej","eval","logs","join","defaultLog","_this","execute","JSON","stringify","parent","impl","parseArgs","key","Object","keys","innerCommand","isArray","arr","push","ab"],"sourceRoot":""}